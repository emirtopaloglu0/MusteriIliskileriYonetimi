<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgEAAP///wByJxgTeS4dTnkuHZV5Lh3LeS4d63ku
        Hft5Lh3+eS4d93ktHeJ/NyG557xQyvvVWO/71llP+tRYALeAOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/PjoAPz46AD///UU4c6+aY1MO8V4LBv0eS4d/3ku
        Hf95Lh3/eS4d/3kuHf95Lh3/dywd/5dNJP/xw0//+9ZZ/8OOP8NyJRpDeS4dBnkuHQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANzqOgDC3gAD9fXERvz46cP79+f82cOy/4xL
        Ov94LBv/eS4d/3kuHf95Lh3/eS4d/3gtHf+SRR//5Y8l/+mhM/+2ezj/hj4j/3gtHfF5Lh2YeS4dIXku
        HQB5Lh0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8+vAA////COrwg3Lk7WXs9vXK//z4
        6v/++uv/3Me2/4tKM/93LBv/eS4d/3kuHf95Lh3/ezAd/9J+JP/ymyb/l0gf/3YrHP94LR3/eS4d/3ku
        Hf95Lh3LdCcaPPW1WgBOBAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/LwAAP2kAAj83n6C+vXU9+nv
        fv/j7WL/9/XK//z46//z9a//yb5M/4pKMP94LBv/eS4d/3kuHf94LR3/v20i//CZJv+MPx7/eC0d/3ku
        Hf95Lh3/eS4d/3kvHf+cbDPe4Odece//ZxLq+WQAAAAAAAAAAAAAAAAAAAAAAPfprQDx//8C+dt0c/vH
        IPf85Jb/+vjg/+nvfv/k7WT/7vKZ/+LsV//w9KH/28a0/4tJOf94LRz/eS4d/3ctHf+URh//9J0m/7Rj
        If93LB3/eS4d/3kuHf94LB3/hUQk/9jZWf/s/GX+5/Riavb/bAB5Lh0AAAAAAAAAAAD36a0A9+mtAPfp
        rkf36Kjs+8sw//zfgP/8+e3/+vfd/+nvf//f60z/7/Kg//z46P///e7/vZaG/3gsG/95Lh3/eS4d/3wx
        Hf/ahST/4Ysl/4A0Hv95Lh3/eC0d/3wxHP+9fhT/7eJD/9jZWf+hdja/aRITFXkuHQAAAAAAAAAAAPfp
        rwD36rAV9+muwvfmov/7yCP//OKN//z57f/8+On/+vfd//X1xP/8+Ob/+fPj/+vezv+mc2P/eCwb/3ku
        Hf94LR3/mUof/+2XJv/chyT/gTYe/3gtHf98Mhz/vHkP//e6A/+9fhT/hUQk/3kvHf55Lh16eS4dAHku
        HQAAAAAA9vHNAPjhjmn36Kv89+iq//rTUP/8yiv//Ou0//z46f/8+On//Pjq//776//s38//k1ZG/3ov
        Hv95Lh3/eC0d/5lKH//slSb/440l/49CH/93LR3/fDIc/7x5D//3ugP/vXoP/30yHP94LB3/eS4d/3ku
        Hd15Lh0neS4dAAAAAAD601QU+tVexPjgi//36a7/9+em//rRSv/8z0H//PXc//z46f/89+f/9Ozc/8yu
        nf9+NiX/eC0c/3gtHf+ZSh//7JUl/+ONJf+PQh//dywd/3wyHP+8eQ//97oD/716D/99Mhz/eC0d/3ku
        Hf95Lh3/eS4d/3kuHXp4MyIAfSEQAOW5Tk/40lfz+tZd//fgjP/36a7/9+el//jjk//789b//Pjp//36
        6v/Cn47/fzcm/3ktHP93LR3/mEof/+uVJv/jjiX/j0If/3csHf98Mhz/vHkP//a6A/+9eg//fTIc/3gt
        HP95Lhz/eS4d/3kuHf95LRz/dUU40ljj7npW8/9PrnM2lPK+Sf//ujr/5aZA/82od//36a3/9+qv//jr
        tv/689n/9/Dg/6+BcP93Khr/eC0c/5pLH//slSX/440l/49CH/93LB3/fDIc/7x5D//2ugP/vXoP/30y
        HP95LBz/djcr/3Y2Kf96LBr/ei0b/3orGf9oiIb/VvL//1bx/u6HPiLL45Mq//+nJv/ymSX/mE4o/8Wg
        df/36a3/+Oqt//Pkr/+4jXP/fjYl/30yIP+LQCj/w3Iw/9SCMP+ZTCf/eS8f/30zHP+8eQ//9roD/716
        D/99Mhz/eSsa/3BHQv9QnMX/TqHN/2Fwgf9xQz3/bE9Q/1C52v9U7P3uVvH+rXovHevCbyL//qYo//21
        RP+8iVr/gjwp/8ahdf/36a3/+Ouv/97Ahv+ZUzT/mVA6/6BXPv+gVz//n1Y//51UPf+VSzf/sGoe//S3
        BP+9eg//fTIc/3krGv9wRkL/TqPP/0mw4v9RmcD/Rrfu/0iy5/9HtOn/TaXR/2ZxeJJW//8JeC0d+oA0
        HP+3dj7/9dyX//LiqP+kbk7/gDgl/8ahd//245j/+8w0/+OlFv+rYzf/n1U+/6BXP/+gVz//oFc//6BX
        QP+pYTr/sWsi/340HP95Kxr/cEZC/06jz/9Krt//bFFT/3gxIv9uTEr/XHyU/1SRtP9vSUf/eisYlHov
        HQB5Lh3+eC0d/3wzIv/BmnH/+Oqu/7+Wbf93LBv/gDkn/7+GQf/5vQX//cML/+G8gP+0e2b/oVg8/6BY
        P/+fVkD/oFc//6BXP/+bUTz/gjYj/3BFQf9Oo87/Sa7f/2xRU/96LBr/eS4d/3osGv95LRz/eDAh/3kt
        HP95Lh2ZeS4dAHkuHfZ5Lh3/eC0c/4E6J/+haUv/iEUu/3gtHP9+MyH/nVM2/8iHLv/32IL//vnj//Di
        zv/grEX/2pgX/7VvMf+gVz//oFc//6FXPv+MV0r/T6HM/0mu3/9sUlP/eSoY/3grGv95Lh3/eS4d/3ku
        Hf95Lh3/eS4d/3kuHY95Lh0AeS4d4XkuHf95Lh3/eS0c/3crG/94LRz/eC0c/4c9Kf+fVj//oVpE/9W1
        pP/7+Or//fvv//7gfP//wgD/8LEJ/7BpNP+fVkD/oVY9/5JoXP9Uocn/alBS/3ksGv+FU1P/iF1i/3oy
        I/95LRz/eS4d/3kuHf95Lh3/eS4ddnkuHQB5Lh25eS4d/3kuHf95Lh3/eS4d/3kuHf94LRz/jEIt/6FY
        P/+fVj7/qWVJ/+zNjv/966///M48/+i8Jv/lvS//xoMn/59VQP+gVz//m1lE/3pNR/+EUE//h1hc/6Sx
        3v+qw/n/knqN/3oxIv95LRz/eS4d/3kuHft5Lh1ReS4dAHkuHXt5Lh3+eS4d/3kuHf95Lh3/eS4d/3gt
        HP+LQS3/oFc//6BXP/+iWT3/4KEY///FCf/tvR//k67R/4it5/+hh3z/oFc//6BXPv+dUzv/j2Fk/6e9
        8P+nuuz/qsP5/6vI//+qw/j/knqN/3oxIv95LRz/eS4d43kuHSZ5Lh0AeS4dNnkuHed5Lh3/eS4d/3ku
        Hf95Lh3/eC0c/4U7KP+fVj7/oFc//59WQP+9eCz/9bcF//C/HP+Ur8//eav//32k8f+SdYX/oWJR/6WY
        r/+iqdH/q8b+/6vI//+rx///q8f//6vI//+qw/j/knqN/3oxIv95LRyteS8eBnkuHQB5Lh0GeS4dpnku
        Hf95Lh3/eS4d/3kuHf95Lh3/fTIg/5lQOf+gWD//oFc//6BYP/+2cDD/zosf/7CHXf+AneL/eqz//32j
        7v+Vk7f/q8X5/6zJ//+rx///q8f//6vH//+rx///q8f//6vI//+qw/j/knuP+3w3LFqBRkAAZwUAAHku
        HQB5Lh1EeS4d8HkuHf95Lh3/eS4d/3kuHf95Lh3/iD4q/59WPv+gVz//oFc//59WQP+fVkD/oFY9/5dr
        bf+BnuL/eqv//36r/P+ZvP7/q8f//6vH//+rx///q8f//6vH//+rx///q8f//6vI//+qxfr7qcDzaqCk
        0ACryP8AeS4dAHkuHQV5Lh2XeS4d/3kuHf95Lh3/eS4d/3kuHf96Lx7/jEIt/55VPv+hWED/oFc//6BX
        P/+gVz//oVY9/5drbf+AneH/eqv//36s//+ZvP//q8f//6vH//+rx///q8f//6vH//+rx///q8f//6vH
        //+rx//Uq8f/HavH/wAAAAAAeS4dAHkuHSF5Lh3KeS4d/3kuHf95Lh3/eS4d/3kuHf95Lx3/hToo/5VL
        Nf+cUzz/n1U+/55VPf+aUTr/kEQu/35QV/97l9z/e6v//36s//+ZvP//q8f//6vH//+rx///q8f//6vH
        //+rx///q8f//6vH//yrx/9eq8f/AAAAAAB5Lh0AeS4dAHkuHT15Lh3deS4d/3kuHf95Lh3/eS4d/3ku
        Hf94LR3/ei8e/380Iv+COCX/gjck/30yIf95Lh3/eSwa/3lNVf95nOf/e6v//36s//+ZvP//q8f//6vH
        //+rx///q8f//6vH//+rx///q8f//6vH/8qrx/8sAAAAAAAAAAB5Lh0AeS4dAHkuHUR5Lh3ZeS4d/3ku
        Hf95Lh3/eS4d/3kuHf95Lh3/eS4d/3gtHf94LR3/eS4d/3kuHf95LRr/cUdR/2WT6P92qP//e6r//36s
        //+ZvP//q8f//6vH//+rx///q8f//6vH//+rx///q8f//6vH/7cAAAAAAAAAAAAAAAB5Lh0AeS4dAHku
        HTN5Lh28eS4d/XkuHf95Lh3/eS4d/3kuHf95Lh3/eS4d/3kuHf95Lh3/eS4d/3ksGf9vVm//Xpj4/22h
        /P97qv//e6r//36s//+ZvP//q8f//6vH//+rx///q8f//6vH//+rx///q8f/9wAAAAAAAAAAAAAAAAAA
        AAB5Lh0AeS4dAHkuHRV5Lh16eS4d33kuHf55Lh3/eS4d/3kuHf95Lh3/eS4d/3kuHf95Lh3/eS0b/3hB
        QP92lt//ear//3uq//97qv//e6r//36s//+ZvP//q8f//6vH//+rx///q8f//6vH//+rx//sAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeS4dAHkuHQF5Lh0meS4denkuHcZ5Lh3veS4d/nkuHf95Lh3/eS4d/3ku
        Hf95Lh3/eS4c+3pabeN7pfXce6r/93uq//57qv//e6r//36s//+YvP//qsb//6zI//+syP//q8f/+qvH
        /4oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHkuHQB6Lh0AeS4dD3kuHTV5Lh1geS4dgnku
        HZV5Lh2ZeS4dj3kuHXd5LhxReSkUJXua4h57qv9Ee6r/ZHuq/4V7qv+me6r/2n2r//+Ls///l7v//5q9
        //qev/+Qrcj/DgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB7qf8Ae6r/AHuq/wJ7qv8we6r/t3qp
        //l7qv/ue6r/ineo/w96qf8A/4AD//4AAP/4AAB/8AAAP+AAAA/AAAAPwAAAB4AAAAeAAAADAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAA4AAAAOAAAABwAAAAeAA
        AADwAAAA+AAAAPwAAAD+AAAA/8AAAP///wE=
</value>
  </data>
</root>